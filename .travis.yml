# Copyright (c) 2012-2017 DreamWorks Animation LLC
#
# All rights reserved. This software is distributed under the
# Mozilla Public License 2.0 ( http://www.mozilla.org/MPL/2.0/ )
#
# Redistributions of source code must retain the above copyright
# and license notice and the following restrictions and disclaimer.
#
# *     Neither the name of DreamWorks Animation nor the names of
# its contributors may be used to endorse or promote products derived
# from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# IN NO EVENT SHALL THE COPYRIGHT HOLDERS' AND CONTRIBUTORS' AGGREGATE
# LIABILITY FOR ALL CLAIMS REGARDLESS OF THEIR BASIS EXCEED US$250.00.
#
# Travis yaml script to configure continous integration
#
# Author: Dan Bailey

# OpenVDB requires Ubuntu Trusty 14.04 or later which Travis does not yet
# support using the faster Container-based infrastructure
# (https://docs.travis-ci.com/user/ci-environment/#Virtualization-environments)
sudo: required
dist: trusty

language: cpp

# Linux-only for now, however Travis also supports Mac OSX
os: linux

# Build with Clang only as GCC is slower and consumes more memory during compilation
compiler: clang

# Enable ccache for faster re-builds
cache:
  ccache: true
  directories:
    - $HOME/.ccache

# Setup environment variables for different concurrent builds
env:
  # Build and run unit tests for ABI={3,4,5}
  - ABI=5 BLOSC=yes RELEASE=yes HOUDINI_MAJOR=none
  - ABI=4 BLOSC=yes RELEASE=yes HOUDINI_MAJOR=none
  - ABI=3 BLOSC=yes RELEASE=yes HOUDINI_MAJOR=none

  # Build Houdini plug-ins for H15.0, H15.5, H16.0, H16.5
  - ABI=4 BLOSC=yes RELEASE=yes HOUDINI_MAJOR=16.5
  - ABI=3 BLOSC=yes RELEASE=yes HOUDINI_MAJOR=16.0
  - ABI=3 BLOSC=yes RELEASE=yes HOUDINI_MAJOR=15.5
  - ABI=3 BLOSC=yes RELEASE=yes HOUDINI_MAJOR=15.0

  # Build and run unit tests for ABI={3,4,5} with Blosc disabled
  - ABI=5 BLOSC=no RELEASE=yes HOUDINI_MAJOR=none
  - ABI=4 BLOSC=no RELEASE=yes HOUDINI_MAJOR=none
  - ABI=3 BLOSC=no RELEASE=yes HOUDINI_MAJOR=none

  # Build (but don't run) unit tests in debug mode for ABI={3,4,5} with and without Blosc
  - ABI=5 BLOSC=yes RELEASE=no HOUDINI_MAJOR=none
  - ABI=4 BLOSC=yes RELEASE=no HOUDINI_MAJOR=none
  - ABI=3 BLOSC=yes RELEASE=no HOUDINI_MAJOR=none
  - ABI=5 BLOSC=no RELEASE=no HOUDINI_MAJOR=none
  - ABI=4 BLOSC=no RELEASE=no HOUDINI_MAJOR=none
  - ABI=3 BLOSC=no RELEASE=no HOUDINI_MAJOR=none
  - secure: bTVyqXEIfdhhjJiHI1ELq766B711W41/2fHKRjFjPUIeEYeD8LrG/MUrGc9Jst/OYWdEcFN329/vjjTNYMKk7DOaOMwlpPap1XmdKSvk0S1Zq80M1j8XWyClkW5UEk5/DZAdtw18k5P8rnjptzxro6BoxPIaQ3P+0UUAOW3pASWGbV8LvNHfzTdTj8OV8RIxm5MV5dlYOj7fDjEViBWjopJ+gcnBBDrtGOpCWSGbnz1WBolym41cMPc8SAJXXzDK6mXy2k4Gpuk23kkKqmZJA9GbPnv/E5VITG2CTzu9sE3XQpPuHa1x7JFvSXm62eo+Gex6d1uixXsrP5rH59eMqPCIAVrmCCfwNn/JBmGNSob1Hp03TDOJ4cw1B69+WI+CrnqNDUAL/FviUIC4mpVNj/Xdoe4fWrCmg6GXEVYbacQcTHmXz+LwjJUDNKnMFwb3w0uimPMCiWUFHr6l73rdixICxYOIWMPZeSzsftV2WidteZPPx9nByGLIDfldXhUuBfOCgxfTYwKiHRExlV2ShHSN38XNwA2qVcuD4JH1DOhi29Pb0+MiJZmGKr6PwMPPtfkzJkQs5FhlUSW1exU4CzPm0gbSd2fGdmRq3nWTk3wPq5cuNc017LAX5Mu9k0DLevTLw5NFwmn17+tDF0Nab6RiA2T1nOMuHFSkeDYzdSY=
  - secure: qmyZOe7zNIdkY5102R4BA5LzB2Jv3byH45TfGkkeWXhernECAef5CEAydMxHg+YShNX5KDUzGi5c0RrECxYpFSgL2Zvh58GSROXsZ22xpAE/HxmZRSFfpVsnfOqQZu3hWa+9zIUzVjawpaPsnCeuBedDwQd/q9AZccQJFVRDirLGNeSWyiLX719f02ogxPyxorwrb4DDGSPT4tXRyAseKnczDoCl68gTnF9ucfaaLAVAeG6dkLTyX+tcaYSxfVrKz8pJJiP/MdRqlRvOAsO5zqnEKevKkEU7+J1/QkK4yUjfWrT/eZeZ8nTVFR8QM2srbN+niyObFUZTohcSzs69vdHpl0myxiRy89Z5cg1mRzuWJBqqxBLh4ducco52UIGkZDko5yXLmbTLcHy4Zv4JnL5xJM4j7azUO0oizmA3WqKicxOVB0llmPVlaQLJ/xJK/VP1lsQAU1HfFV53W0Qs/GY98FsaOKn/SVl8fbhcBRon50PR3afoI11MiBddK5LeVazIGpeV0jCqaLkJNlqKSuEwiZUezt9MgEToQDdAxC1y3vFn42SMstQhkzgo5GHWXjTs4uICjwsnebhkYF1/nyzZNWruFWqX3PeljtyqTs30X6zWA3rpcbXpnxEeS4sk2IVWaTRP7WGzb0sDyHAxqaOlq6RgJ95vm74qoZrZMQw=

# Build and install all library dependencies for OpenVDB
# (build will error if this stage does not succeed)
install: bash travis/travis.run install $ABI $BLOSC $RELEASE $HOUDINI_MAJOR

# Build OpenVDB and OpenVDB Houdini and run unit tests
# (build will fail if this stage does not succeed)
script: bash travis/travis.run script $ABI $BLOSC $RELEASE $HOUDINI_MAJOR
